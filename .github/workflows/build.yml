name: Build and Release for Linux Architectures

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on tags like v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64, 386]  # List of architectures
    env:
      GOOS: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Specify your Go version

      - name: Build for ${{ matrix.goarch }}
        run: |
          CGO_ENABLED=0 GOOS=$GOOS GOARCH=${{ matrix.goarch }} go build -o bin/esdata-${{ matrix.goarch }} main.go

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esdata-${{ matrix.goarch }}
          path: bin/esdata-${{ matrix.goarch }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}  # Use the tag that triggered the workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/esdata-${{ matrix.goarch }}
          asset_name: esdata-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
